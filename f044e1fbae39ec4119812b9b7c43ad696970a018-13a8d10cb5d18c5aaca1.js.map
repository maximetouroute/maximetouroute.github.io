{"version":3,"file":"f044e1fbae39ec4119812b9b7c43ad696970a018-13a8d10cb5d18c5aaca1.js","mappings":"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","sources":["webpack://maxime-touroute-portfolio/./node_modules/color-name/index.js","webpack://maxime-touroute-portfolio/./node_modules/color-string/index.js","webpack://maxime-touroute-portfolio/./node_modules/color/index.js","webpack://maxime-touroute-portfolio/./node_modules/color/node_modules/color-convert/conversions.js","webpack://maxime-touroute-portfolio/./node_modules/color/node_modules/color-convert/index.js","webpack://maxime-touroute-portfolio/./node_modules/color/node_modules/color-convert/route.js","webpack://maxime-touroute-portfolio/./node_modules/color/node_modules/color-name/index.js","webpack://maxime-touroute-portfolio/./src/bits/Max/accentColorCreator.ts","webpack://maxime-touroute-portfolio/./node_modules/simple-swizzle/index.js","webpack://maxime-touroute-portfolio/./node_modules/simple-swizzle/node_modules/is-arrayish/index.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","const Color = require('color');\n\nexport const makeAccentColor = (hexColor: string):string => {\n   return new Color(hexColor).darken(0.8).saturate(10).hex();\n};","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n"],"names":["module","exports","colorNames","swizzle","hasOwnProperty","Object","reverseNames","create","name","call","cs","to","get","clamp","num","min","max","Math","hexDouble","str","round","toString","toUpperCase","length","string","val","model","substring","toLowerCase","hsl","hwb","rgb","value","match","i","hexAlpha","i2","parseInt","slice","parseFloat","alpha","isNaN","hex","rgba","arguments","percent","r","g","b","hsla","hwba","a","keyword","colorString","convert","skippedModels","hashedModelKeys","keys","labels","sort","join","limiters","Color","object","this","Error","channels","color","valpha","result","newArray","Array","prototype","zeroArray","splice","indexOf","hashedKeys","JSON","stringify","push","limit","freeze","toJSON","places","self","args","percentString","array","unitArray","unitObject","map","roundToPlace","undefined","red","getset","maxfn","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","l","hexa","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w","w1","w2","includes","raw","isArray","number","Number","toFixed","roundTo","channel","modifier","m","v","cssKeywords","reverseKeywords","key","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","defineProperty","delta","h","s","rdif","gdif","bdif","diff","diffc","c","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","t2","t3","t1","smin","lmin","hi","floor","f","q","t","vmin","sl","wh","bl","n","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","saturation","ansi","mult","rem","split","char","integer","pure","mg","conversions","route","forEach","fromModel","routes","toModel","fn","wrappedFn","arg0","len","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","path","cur","require","makeAccentColor","hexColor","isArrayish","concat","results","arg","wrap","obj","Function","getOwnPropertyDescriptor","constructor"],"sourceRoot":""}