{"version":3,"file":"component---src-pages-index-tsx-cfbdd149901239f3f52d.js","mappings":"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","sources":["webpack://maxime-touroute-portfolio/./src/bits/PostGridFlat/styles.ts","webpack://maxime-touroute-portfolio/./src/bits/PostGridFlat/PostGridFlat.tsx","webpack://maxime-touroute-portfolio/./src/locales/strings.tsx","webpack://maxime-touroute-portfolio/./src/pages/index.tsx"],"sourcesContent":["import { CSSObject } from '@emotion/react'\n\nimport { breakpointKey } from '../styles/styles'\nimport { Theme } from '@mui/material'\n\nconst blackLink = '#4c4c4c'\n\n\nexport const gridCSS = (theme: Theme): CSSObject => {\n  return {\n  margin: 'auto',\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  maxWidth: '90rem',\n  width: '100%',\n  padding: 0,\n  color: theme.palette.secondary.contrastText\n\n};\n}\n\nexport const postCSS = (theme: Theme, color: string): CSSObject => {\n  return {\n  display: 'flex',\n  flexDirection: 'column',\n  color: theme.palette.secondary.contrastText,\n  // border-radius: 5px;\n  // backgroundColor: 'transparent',\n  // border: solid 2px $black\n  transform: 'scale(0.97)',\n  fontSize: '1rem',\n\n  opacity: 0.9,\n\n  // transition: `-webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n  //   transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n  //   filter 250ms cubic-bezier(0.4, 0, 0.2, 1),\n  //   opacity 250ms cubic-bezier(0.4, 0, 0.2, 1)`,\n  transition: `color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    filter 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    opacity 250ms cubic-bezier(0.4, 0, 0.2, 1)`,\n  textDecoration: 'none', // Post is a link element\n  \n\n  [breakpointKey('small')]: {\n    width: '90vw',\n    height: '70vw',\n    marginTop: '1em',\n    marginCottom: '1em',\n    },\n\n  [breakpointKey('normal')]: {\n    margin: '1em',\n    width: '60vw',\n    height: '30vw',\n    maxWidth: '30em',\n    maxHeight: '20em',\n  },\n\n  '&:hover': {\n    border: 'none',\n    cursor: 'pointer',\n    transform: 'none',\n    opacity: 1,\n    color: `${color} !important`\n  },\n};\n};\n\nexport const postHeadCSS: CSSObject = {\n  display: 'flex',\n  flexDirection: 'column',\n}\n\nexport const postTitleCSS: CSSObject = {\n  fontSize: '1.5em',\n  fontWeight: 600,\n  padding: '0.5rem',\n  paddingBottom: 0,\n  paddingLeft: 0,\n  marginBottom: 0,\n}\n\nexport const postSubtitleCSS: CSSObject = {\n  fontSize: '1em',\n  boxDecorationBreak: 'clone',\n  padding: '0.5rem',\n  paddingLeft: 0,\n}\n\nexport const postPictureCSS: CSSObject = {\n  flexGrow: 1,\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center top',\n  borderRadius: '10px'\n}\n","import { CSSObject } from '@emotion/react'\nimport { Link } from 'gatsby'\nimport { BgImage } from 'gbimage-bridge'\nimport { getImage } from 'gatsby-plugin-image'\nimport {\n  postCSS,\n  postHeadCSS,\n  postPictureCSS,\n  postSubtitleCSS,\n  postTitleCSS,\n  gridCSS\n} from './styles'\nimport { useTheme } from '@mui/material'\n\n\n\n\ninterface OwnProps {\n  posts: any\n}\nexport default function PostGridFlat({ posts }: OwnProps) {\n  const theme = useTheme();\n  return (\n    <div css={gridCSS(theme)}>\n      {posts\n        .filter((post) => post.node.frontmatter.title.length > 0)\n        .map(({ node: post }) => {\n          const image = post.frontmatter.image.childImageSharp\n          const gatsbyImage = getImage(image)\n          const customColor = post.frontmatter.image.colors !== void 0\n          return (\n            <Link\n              css={{ ...postCSS(theme, customColor ? post.frontmatter.image.colors.vibrant : 'black') }}\n              to={`${post.frontmatter.path}#content`}\n              key={post.id}\n            >\n              <div css={postHeadCSS}>\n                <span css={postTitleCSS}>{post.frontmatter.title}</span>\n                <span css={postSubtitleCSS}>{post.frontmatter.subtitle} </span>\n              </div>\n              <BgImage image={gatsbyImage} css={postPictureCSS} />\n            </Link>\n          )\n        })}\n    </div>\n  )\n}\n","import { LanguageServiceMode } from 'typescript'\nimport { LangCode } from './locales'\n\nexport const strings: Record<string, Record<LangCode, string>> = {\n  aboutMe: {\n    en: 'About',\n    fr: 'A propos',\n  },\n}\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport LayoutRoot from '../components/LayoutRoot/LayoutRoot'\nimport SEO from '../bits/SEO/SEO'\nimport PostGrid from '../bits/PostGridFlat/PostGridFlat'\nimport { Theme, useTheme, CSSObject, ThemeProvider } from '@emotion/react'\nimport { themedACSS } from '../bits/styles/styles'\nimport { strings } from '../locales/strings'\nconst homeCSS = {\n  marginTop: '4rem',\n}\n\nconst moreProjectsCSS = (theme: Theme): CSSObject => {\n  return {\n    fontSize: '1.5rem',\n    display: 'grid',\n    justifySelf: 'center',\n    justifyItems: 'center',\n\n    a: {\n      textAlign: 'center',\n      margin: '1rem',\n      marginTop: '4rem',\n      ...themedACSS(theme.palette.primary.main),\n    },\n  }\n}\n\nexport default function Index({ data, pageContext: { langCode }, location }) {\n  // const LOCAL = indexPageStrings[langCode];\n  const posts = data.allMdx.edges\n  const postsInMyLang = posts.filter(\n    (post) => post.node.frontmatter.language === langCode\n  )\n\n  return (\n    <LayoutRoot language={langCode} location={{ ...location }}>\n      <SEO title={'Home'} langCode={langCode} />\n      <div css={homeCSS}>\n        <PostGrid posts={postsInMyLang} />\n        <div css={(theme) => moreProjectsCSS(theme)}>\n          <Link to=\"/about\">{strings['aboutMe'][langCode]}</Link>\n        </div>\n      </div>\n    </LayoutRoot>\n  )\n}\n\nexport const portfolioPostsQuery = graphql`\nquery IndexQuery {\n  allMdx(\n    sort: {frontmatter: {priority: ASC}}\n    filter: {frontmatter: {category: {eq: \"portfolio\"}}}\n  ) {\n    edges {\n      node {\n        excerpt(pruneLength: 250)\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          path\n          category\n          subtitle\n          language\n          image {\n            colors {\n              ...GatsbyImageColors\n            }\n            childImageSharp {\n              gatsbyImageData(height: 500, placeholder: BLURRED)\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n"],"names":["gridCSS","theme","margin","display","flexDirection","justifyContent","flexWrap","maxWidth","width","padding","color","palette","secondary","contrastText","postCSS","transform","fontSize","opacity","transition","textDecoration","breakpointKey","height","marginTop","marginCottom","maxHeight","border","cursor","postHeadCSS","postTitleCSS","fontWeight","paddingBottom","paddingLeft","marginBottom","postSubtitleCSS","boxDecorationBreak","postPictureCSS","flexGrow","backgroundRepeat","backgroundSize","backgroundPosition","borderRadius","PostGridFlat","_ref","posts","useTheme","___EmotionJSX","css","filter","post","node","frontmatter","title","length","map","_ref2","image","childImageSharp","gatsbyImage","getImage","customColor","colors","Link","_css","vibrant","to","path","key","id","subtitle","BgImage","strings","aboutMe","en","fr","homeCSS","moreProjectsCSS","justifySelf","justifyItems","a","textAlign","themedACSS","primary","main","Index","data","pageContext","langCode","location","postsInMyLang","allMdx","edges","language","LayoutRoot","SEO","PostGrid"],"sourceRoot":""}