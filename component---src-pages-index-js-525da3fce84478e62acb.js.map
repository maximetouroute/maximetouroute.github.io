{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/pages/index.js"],"names":["createHTML","this","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","Index","posts","data","allMarkdownRemark","edges","title","className","filter","post","node","frontmatter","map","to","path","key","id","style","backgroundImage","image","childImageSharp","fixed","src","subtitle","portfolioPostsQuery"],"mappings":"6FAEA,EAAQ,OAAR,CAA0B,SAAS,SAAUA,GAC3C,OAAO,WACL,OAAOA,EAAWC,KAAM,KAAM,GAAI,S,qBCJtC,IAAIC,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPL,EAAa,SAAUM,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOP,EAAQE,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQR,EAAM,UAAY,KACtFO,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKjB,GACfE,EAAQA,EAAQiB,EAAIjB,EAAQkB,EAAIjB,GAAM,WACpC,IAAIkB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,sNCXD,SAASO,EAAT,GAA0B,IACxBC,EADuB,EAARC,KACAC,kBAAtBC,MAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,MAAO,SACjB,yBAAKC,UAAU,kBACb,8BAEA,yBAAKA,UAAU,YACZL,EACEM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYL,MAAMN,OAAS,KACpDY,KAAI,YAAqB,IAAZH,EAAW,EAAjBC,KACN,OAEE,kBAAC,OAAD,CACEH,UAAU,OACVM,GAAOJ,EAAKE,YAAYG,KAAtB,WACFC,IAAKN,EAAKO,IAEV,yBACET,UAAU,aACVU,MAAO,CACLC,gBACE,OACAT,EAAKE,YAAYQ,MAAMC,gBAAgBC,MAAMC,IAC7C,MAGJ,yBAAKf,UAAU,UACb,0BAAMA,UAAU,aACbE,EAAKE,YAAYL,OAEpB,0BAAMC,UAAU,qBACbE,EAAKE,YAAYY,iBASlC,yBAAKhB,UAAU,gBACb,kBAAC,OAAD,CAAMM,GAAG,UAAT,eAOH,IAAMW,EAAmB","file":"component---src-pages-index-js-525da3fce84478e62acb.js","sourcesContent":["'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport MainLayout from '../layout/MainLayout'\nimport MetaTags from '../components/MetaTags'\nimport './index.scss'\n\nexport default function Index({ data }) {\n  const { edges: posts } = data.allMarkdownRemark\n\n  return (\n    <MainLayout>\n      <MetaTags title={'Home'} />\n      <div className=\"home homePosts\">\n        <div></div>\n\n        <div className=\"postGrid\">\n          {posts\n            .filter(post => post.node.frontmatter.title.length > 0)\n            .map(({ node: post }) => {\n              return (\n                // TODO : remove underline and otherwise seems ok\n                <Link\n                  className=\"post\"\n                  to={`${post.frontmatter.path}#content`}\n                  key={post.id}\n                >\n                  <div\n                    className=\"postHeader\"\n                    style={{\n                      backgroundImage:\n                        'url(' +\n                        post.frontmatter.image.childImageSharp.fixed.src +\n                        ')',\n                    }}\n                  >\n                    <div className=\"inside\">\n                      <span className=\"postTitle\">\n                        {post.frontmatter.title}\n                      </span>\n                      <span className=\"post-meta postTag\">\n                        {post.frontmatter.subtitle}\n                      </span>\n                    </div>\n                  </div>\n                </Link>\n              )\n            })}\n        </div>\n\n        <div className=\"moreProjects\">\n          <Link to=\"/about\">About me</Link>\n        </div>\n      </div>\n    </MainLayout>\n  )\n}\n\nexport const portfolioPostsQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { category: { eq: \"portfolio\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            category\n            subtitle\n            image {\n              childImageSharp {\n                # Other options include height (set both width and height to crop),\n                # grayscale, duotone, rotate, etc.\n                fixed(width: 700) {\n                  # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\n                  ...GatsbyImageSharpFixed\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}