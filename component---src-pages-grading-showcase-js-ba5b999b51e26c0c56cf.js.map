{"version":3,"sources":["webpack:///./src/components/image-compare.js","webpack:///./src/pages/gradingShowcase.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/css-element-queries/src/ResizeSensor.js","webpack:///./node_modules/css-element-queries/index.js","webpack:///./node_modules/css-element-queries/src/ElementQueries.js"],"names":["propTypes","leftImage","prop_types_default","a","string","isRequired","rightImage","sliderLineWidth","number","handleSize","hover","bool","skeleton","element","autoReloadSpan","autoReloadLimit","sliderPositionPercentage","image_compare_ReactCompareImage","ReactCompareImage","props","_this","_React$Component","call","this","componentDidMount","containerElement","containerRef","current","css_element_queries","setImagesSize","addEventListener","startSliding","window","finishSliding","componentDidUpdate","prevProps","prevState","isImgFullyLoaded","state","underImageRef","src","overImageRef","isLoadingRightImg","isLoadingLeftImg","setState","componentWillUnmount","removeEventListener","autoReloadTasks","forEach","task","clearTimeout","imageWidth","getBoundingClientRect","width","e","preventDefault","handleSliding","event","pos","touches","pageX","pageXOffset","left","minPos","maxPos","onRightImageLoaded","onLeftImageLoaded","onError","ref","_this$props","retryCount","taskId","setTimeout","push","render","styles","container","boxSizing","position","overflow","underImage","display","height","background","overImage","clip","objectFit","top","slider","alignItems","cursor","flexDirection","justifyContent","line","boxShadow","flex","handle","border","backgroundColor","leftArrow","borderRight","marginLeft","marginRight","rightArrow","borderLeft","overlayTextLeft","opacity","overlayTextRight","right","leftWord","textAlign","color","fontWeight","textTransform","padding","rightWord","react_default","createElement","Fragment","style","Object","assign","dataenzyme","onLoad","alt","className","createRef","Component","defaultProps","image_compare","descriptionPropTypes","title","subtitle","cameraModel","videoFlux","description","hrStyle","borderColor","marginTop","marginBottom","gradingShowcase_Description","cameraUsed","undefined","react","gradingShowcase_GradingShowcase","layout","id","paddingTop","paddingBottom","itemProp","data","real2A","childImageSharp","fixed","real2B","poucet2A","poucet2B","mari3A","mari3B","mari1A","mari1B","mari5A","mari5B","harm1A","harm1B","harm3A","harm3B","harm4A","harm4B","harm5A","harm5B","gatsby_browser_entry","to","fileImage","__webpack_exports__","query","__webpack_require__","createHTML","$export","fails","defined","quot","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","forEachElement","elements","callback","elementsType","prototype","toString","isCollectionTyped","jQuery","Elements","i","j","getElementSize","offsetWidth","offsetHeight","rect","Math","round","ResizeSensor","EventQueue","q","add","ev","remove","newQueue","elem","resized","resizedAttached","resizeSensor","document","dir","styleChild","cssText","innerHTML","appendChild","getComputedStyle","getPropertyValue","dirty","rafId","expand","childNodes","expandChild","shrink","size","lastWidth","lastHeight","reset","invisible","saveDisplay","scrollLeft","scrollTop","resetSensor","onResized","newWidth","newHeight","onScroll","addEvent","el","name","cb","attachEvent","attachResizeEvent","detach","contains","removeChild","ElementQueries","__WEBPACK_AMD_DEFINE_ARRAY__","cssStyleElement","allQueries","idToSelectorMapping","getEmSize","documentElement","fontSize","parseFloat","convertToPx","numbers","units","clientWidth","clientHeight","vw","vh","chooser","SetupInformation","key","option","elementSize","actualValue","attrValues","attrValue","attrName","attributes","hasOwnProperty","property","mode","indexOf","k","setAttribute","substr","removeAttribute","setupElement","elementQueriesSetupInformation","elementQueriesSensor","queueQuery","selector","getQuery","querySelectorAll","bind","$$","attachResponsiveImage","children","rules","sources","defaultImageId","lastActiveImage","loadedImages","tagName","minWidth","getAttribute","rule","check","imageToDisplay","image","Image","onload","regex","attrRegex","extractQuery","css","match","smatch","attrs","attrMatch","readRules","type","selectorText","cssRules","styleSheet","defaultCssInjected","init","animationStart","body","target","sensorStyles","parseInt","getElementsByTagName","styleSheets","href","console","log","findResponsiveImages","findElementQueriesElements","update","instance","listen","navigator","userAgent","DOMLoadTimer","setInterval","readyState","clearInterval","domLoaded","apply"],"mappings":"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","file":"component---src-pages-grading-showcase-js-ba5b999b51e26c0c56cf.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ResizeSensor } from 'css-element-queries'\n\nconst propTypes = {\n  leftImage: PropTypes.string.isRequired,\n  rightImage: PropTypes.string.isRequired,\n  sliderLineWidth: PropTypes.number,\n  handleSize: PropTypes.number,\n  hover: PropTypes.bool,\n  skeleton: PropTypes.element,\n  autoReloadSpan: PropTypes.number,\n  autoReloadLimit: PropTypes.number,\n  sliderPositionPercentage: PropTypes.number,\n}\n\nconst defaultProps = {\n  sliderLineWidth: 2,\n  handleSize: 40,\n  hover: false,\n  skeleton: null,\n  autoReloadSpan: null,\n  autoReloadLimit: 10,\n  sliderPositionPercentage: 0.75,\n}\n\nclass ReactCompareImage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sliderPositionPercentage: this.props.sliderPositionPercentage, // 0 to 1\n      imageWidth: 0,\n      isImgFullyLoaded: false,\n    }\n\n    this.containerRef = React.createRef()\n    this.underImageRef = React.createRef()\n    this.overImageRef = React.createRef()\n\n    this.isLoadingRightImg = true\n    this.isLoadingLeftImg = true\n\n    this.autoReloadTasks = []\n\n    this.retryCount = 0\n  }\n\n  componentDidMount = () => {\n    const containerElement = this.containerRef.current\n\n    // Re-set images size when container size is changed\n    new ResizeSensor(containerElement, () => {\n      this.setImagesSize()\n    })\n\n    // for mobile\n    containerElement.addEventListener('touchstart', this.startSliding)\n    window.addEventListener('touchend', this.finishSliding)\n\n    // for desktop\n    if (this.props.hover) {\n      containerElement.addEventListener('mouseenter', this.startSliding)\n      containerElement.addEventListener('mouseleave', this.finishSliding)\n    } else {\n      containerElement.addEventListener('mousedown', this.startSliding)\n      window.addEventListener('mouseup', this.finishSliding)\n    }\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // do initial setup if loading images and DOM constructing are fully done\n    if (\n      prevState.isImgFullyLoaded === false &&\n      this.state.isImgFullyLoaded === true\n    ) {\n      this.setImagesSize()\n    }\n\n    // show skeleton again if given images are changed\n    if (\n      this.props.leftImage !== prevProps.leftImage ||\n      this.props.rightImage !== prevProps.rightImage\n    ) {\n      this.underImageRef.current.src = null\n      this.overImageRef.current.src = null\n\n      this.isLoadingRightImg = true\n      this.isLoadingLeftImg = true\n      this.setState({\n        isImgFullyLoaded: false,\n      })\n\n      this.underImageRef.current.src = this.props.rightImage\n      this.overImageRef.current.src = this.props.leftImage\n    }\n  }\n\n  componentWillUnmount = () => {\n    this.finishSliding()\n    window.removeEventListener('mouseup', this.finishSliding)\n    window.removeEventListener('touchend', this.finishSliding)\n    this.autoReloadTasks.forEach(task => clearTimeout(task))\n  }\n\n  setImagesSize = () => {\n    // Image size set as follows.\n    //\n    // 1. set under image size like so:\n    //     width  = 100% of container width\n    //     height = auto\n    //\n    // 2. set over imaze size like so:\n    //     width  = 100% of container width\n    //     height = under image's height\n    //              (protrudes is hidden by css 'object-fit: hidden')\n    this.setState({\n      imageWidth: this.underImageRef.current.getBoundingClientRect().width,\n    })\n  }\n\n  startSliding = e => {\n    // Prevent default behavior other than mobile scrolling\n    if (!('touches' in e)) {\n      e.preventDefault()\n    }\n\n    // Slide the image even if you just click or tap (not drag)\n    this.handleSliding(e)\n\n    window.addEventListener('mousemove', this.handleSliding)\n    window.addEventListener('touchmove', this.handleSliding)\n  }\n\n  finishSliding = () => {\n    window.removeEventListener('mousemove', this.handleSliding)\n    window.removeEventListener('touchmove', this.handleSliding)\n  }\n\n  handleSliding = event => {\n    const e = event || window.event\n\n    // Calc Cursor Position from the left edge of the viewport\n    const cursorXfromViewport = e.touches ? e.touches[0].pageX : e.pageX\n\n    // Calc Cursor Position from the left edge of the window (consider any page scrolling)\n    const cursorXfromWindow = cursorXfromViewport - window.pageXOffset\n\n    // Calc Cursor Position from the left edge of the image\n    const imagePosition = this.underImageRef.current.getBoundingClientRect()\n    let pos = cursorXfromWindow - imagePosition.left\n\n    // Set minimum and maximum values ​​to prevent the slider from overflowing\n    const minPos = 0 + this.props.sliderLineWidth / 2\n    const maxPos = this.state.imageWidth - this.props.sliderLineWidth / 2\n\n    if (pos < minPos) pos = minPos\n    if (pos > maxPos) pos = maxPos\n\n    this.setState({\n      sliderPositionPercentage: pos / this.state.imageWidth,\n    })\n  }\n\n  onRightImageLoaded = () => {\n    this.isLoadingRightImg = false\n\n    if (!this.isLoadingRightImg && !this.isLoadingLeftImg) {\n      this.setState({ isImgFullyLoaded: true })\n    }\n  }\n\n  onLeftImageLoaded = () => {\n    this.isLoadingLeftImg = false\n    if (!this.isLoadingRightImg && !this.isLoadingLeftImg) {\n      this.setState({ isImgFullyLoaded: true })\n    }\n  }\n\n  onError = (ref, src) => {\n    const { autoReloadSpan, autoReloadLimit } = this.props\n\n    if (!autoReloadSpan) return\n    if (this.retryCount >= autoReloadLimit) return\n\n    const taskId = setTimeout(() => {\n      ref.current.src = null\n      ref.current.src = src\n    }, autoReloadSpan)\n    this.autoReloadTasks.push(taskId)\n\n    this.retryCount += 1\n  }\n\n  render = () => {\n    const styles = {\n      container: {\n        boxSizing: 'border-box',\n        position: 'relative',\n        width: '100%',\n        overflow: 'hidden',\n      },\n      underImage: {\n        display: 'block',\n        height: 'auto', // Respect the aspect ratio\n        width: '100%',\n        background: `url(${this.props.underImage})`,\n      },\n      overImage: {\n        clip: `rect(auto, ${this.state.imageWidth *\n        this.state.sliderPositionPercentage}px, auto, auto)`,\n        display: 'block',\n        height: '100%', // fit to the height of under image\n        objectFit: 'cover', // protrudes is hidden\n        position: 'absolute',\n        top: 0,\n        width: '100%',\n      },\n      slider: {\n        alignItems: 'center',\n        cursor: !this.props.hover && 'ew-resize',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center',\n        left:\n          this.state.imageWidth * this.state.sliderPositionPercentage -\n          this.props.handleSize / 2 +\n          'px',\n        position: 'absolute',\n        top: 0,\n        width: `${this.props.handleSize}px`,\n      },\n      line: {\n        background: 'white',\n        boxShadow:\n          '0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)',\n        flex: '0 1 auto',\n        height: '100%',\n        width: `${this.props.sliderLineWidth}px`,\n      },\n      handle: {\n        alignItems: 'center',\n        border: `${this.props.sliderLineWidth}px solid white`,\n        boxShadow:\n          '0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: '1 0 auto',\n        height: `80px`,\n        justifyContent: 'center',\n        width: `10px`,\n        backgroundColor: `white`,\n      },\n      leftArrow: {\n        border: `inset ${this.props.handleSize * 0.15}px rgba(0,0,0,0)`,\n        borderRight: `${this.props.handleSize * 0.15}px solid white`,\n        height: '0px',\n        marginLeft: `-${this.props.handleSize * 0.50}px`, // for IE11\n        marginRight: `${this.props.handleSize * 0.50}px`,\n        width: '0px',\n      },\n      rightArrow: {\n        border: `inset ${this.props.handleSize * 0.15}px rgba(0,0,0,0)`,\n        borderLeft: `${this.props.handleSize * 0.15}px solid white`,\n        height: '0px',\n        marginRight: `-${this.props.handleSize * 0.50}px`, // for IE11\n        width: '0px',\n      },\n      overlayTextLeft: {\n        alignItems: 'flex-start',\n        display: 'flex',\n        flexDirection: 'column',\n        //height: '50px',\n        justifyContent: 'center',\n        left: `${this.state.imageWidth}-100px`,\n        position: 'absolute',\n        top: 0,\n       // width: `100px`,\n        backgroundColor:'rgba(0,0,0,0.5)',\n        opacity: this.state.sliderPositionPercentage\n      },\n      overlayTextRight: {\n        alignItems: 'flex-end',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        right: `0`,\n        position: 'absolute',\n        top: 0,\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        opacity: 1-this.state.sliderPositionPercentage\n      },\n      leftWord: {\n        textAlign: 'left',\n        color: 'white',\n        fontWeight: 400,\n        textTransform: 'uppercase',\n        padding: '1em',\n      },\n      rightWord: {\n        textAlign: 'right',\n        color: 'white',\n        fontWeight: 400,\n        textTransform: 'uppercase',\n        padding: '1em',\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {this.props.skeleton &&\n        !this.state.isImgFullyLoaded && (\n          <div style={{ ...styles.container }}>{this.props.skeleton}</div>\n        )}\n\n        <div\n          style={{\n            ...styles.container,\n            display: this.state.isImgFullyLoaded ? 'block' : 'none',\n          }}\n          ref={this.containerRef}\n          dataenzyme=\"container\"\n        >\n\n\n          <img\n            onLoad={this.onLeftImageLoaded}\n            onError={() =>\n              this.onError(this.underImageRef, this.props.rightImage)\n            }\n            alt=\"left\"\n            className=\"img-comp-under\"\n            ref={this.underImageRef}\n            src={this.props.rightImage}\n            style={styles.underImage}\n          />\n\n\n          <img\n            onLoad={this.onRightImageLoaded}\n            onError={() =>\n              this.onError(this.overImageRef, this.props.leftImage)\n            }\n            alt=\"right\"\n            className=\"img-comp-over\"\n            ref={this.overImageRef}\n            src={this.props.leftImage}\n            style={styles.overImage}\n          />\n\n          <div style={styles.overlayTextRight}>\n              <span style={styles.leftWord}>\n                RAW\n              </span>\n          </div>\n          <div style={styles.overlayTextLeft}>\n              <span style={styles.leftWord}>\n                GRADED\n              </span>\n          </div>\n          <div className=\"img-comp-slider\" style={styles.slider}>\n\n            <div style={styles.line}/>\n            <div style={styles.handle}>\n              <div style={styles.leftArrow}/>\n              <div style={styles.rightArrow}/>\n            </div>\n            <div style={styles.line}/>\n\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nReactCompareImage.propTypes = propTypes\nReactCompareImage.defaultProps = defaultProps\n\nexport default ReactCompareImage\n","import React, { Component } from 'react'\nimport Layout from './../layout/layout'\nimport './../layout/page.scss'\nimport ImageCompare from '../components/image-compare'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\n\nconst descriptionPropTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  cameraModel: PropTypes.string.isRequired,\n  videoFlux: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n\n}\n\nconst hrStyle = {\n  backgroundColor: '#4c4c4c',\n  borderColor: '#4c4c4c',\n  height: '1px',\n  marginTop: '5em',\n  marginBottom: '5em',\n  width: '250px',\n}\n\nclass Description extends Component {\n\n\n  cameraUsed() {\n\n    if (this.props.cameraModel !== undefined) {\n      return (<p><strong>Caméra : </strong>{this.props.cameraModel}</p>)\n    } else {\n      return (<></>)\n    }\n  }\n\n  videoFlux() {\n\n    if (this.props.videoFlux !== undefined) {\n      return (<p><strong>Video flux : </strong>{this.props.videoFlux}</p>)\n    } else {\n      return (<></>)\n    }\n  }\n\n  render() {\n\n\n    return (<div>\n\n        <h2>{this.props.title}</h2>\n\n        <p>{this.props.subtitle}</p>\n        {this.cameraUsed()}\n        {this.videoFlux()}\n        <p>{this.props.description}</p>\n      </div>\n    )\n  }\n}\n\nDescription.propTypes = descriptionPropTypes\n\n\nclass GradingShowcase extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div className=\"coverBand\" id=\"content\">\n          <div className=\"overlay overlaySmaller\">\n            <div className=\"punchline\">Color Grade showreel</div>\n          </div>\n        </div>\n\n        <div className=\"Page\">\n          <article className=\"card article\" id=\"content\">\n            <header className=\"header\" style={{\n              paddingTop: '1em',\n              paddingBottom: '2em',\n            }}>\n            </header>\n            <div className=\"content\" itemProp=\"articleBody\">\n\n              <Description title={'RÉALITÉ'}\n                           subtitle={'Court métrage de Maxime Touroute'}\n                           videoFlux={`H264`}\n                           cameraModel={`Nikon D5500`}\n                           description={`Ici, et suite à un tournage avec très peu d'éclairage disponible, un gros travail sur le contraste de l'image a été fait pour lui donner un maximum de dynamisme.\n`}\n              />\n\n\n              <ImageCompare leftImage={this.props.data.real2A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.real2B.childImageSharp.fixed.src}/>\n\n\n              <hr style={hrStyle}/>\n\n              <Description title={`PETIT POUCET`} subtitle={`Court métrage co-réalisé`}\n                           cameraModel={`Blackmagic Cinema Camera`} videoFlux={`Prores standard`}\n                           description={`Étalonnage express d'un court métrage réalisé en quelques heures.`}/>\n\n\n              <ImageCompare leftImage={this.props.data.poucet2A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.poucet2B.childImageSharp.fixed.src}/>\n\n              <hr style={hrStyle}/>\n\n              <Description title={`MARIPEGA`} subtitle={`Clip réalité par Maxime Touroute`} cameraModel={`Nikon D5500`}\n                           videoFlux={`H264 de bonne qualité`}\n                           description={`Création d'un effet coucher de soleil chaud ainsi qu'une ambiance matinale anxiogène.`}/>\n\n              <ImageCompare leftImage={this.props.data.mari3A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.mari3B.childImageSharp.fixed.src}\n              />\n              <ImageCompare leftImage={this.props.data.mari1A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.mari1B.childImageSharp.fixed.src}\n              />\n              <ImageCompare leftImage={this.props.data.mari5A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.mari5B.childImageSharp.fixed.src}\n              />\n\n              <hr style={hrStyle}/>\n\n              <Description title={`HARMONIE DES SPHÈRES`} subtitle={`Court métrage de Vincent Montalieu.`}\n                           cameraModel={`Lumix GH2`}\n                           videoFlux={`H264 de qualité assez faible nécessitant une grande finesse dans l'étalonnage`}\n                           description={`Création d'un étalonnage neutre et froid pour une ambiance réaliste et parfois sombre.`}/>\n\n\n              <ImageCompare leftImage={this.props.data.harm1A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.harm1B.childImageSharp.fixed.src}\n              />\n              <ImageCompare leftImage={this.props.data.harm3A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.harm3B.childImageSharp.fixed.src}\n              />\n              <ImageCompare leftImage={this.props.data.harm4A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.harm4B.childImageSharp.fixed.src}\n              />\n              <ImageCompare leftImage={this.props.data.harm5A.childImageSharp.fixed.src}\n                            rightImage={this.props.data.harm5B.childImageSharp.fixed.src}\n              />\n\n\n              <br/><br/>\n              <p>For more, check out my <Link to={'/color-grade-breakdown-2017'}>2017 Color Grading Showreel</Link></p>\n\n\n\n            </div>\n          </article>\n        </div>\n\n\n      </Layout>\n    )\n  }\n\n}\n\nexport default GradingShowcase\n\n\nexport const fileImage = graphql`\n    fragment fileImage on File {\n        childImageSharp {\n            fixed(width: 1920) {\n                ...GatsbyImageSharpFixed_noBase64\n                src\n            }\n        }\n    }`\n\nexport const query = graphql`\n    query {\n        real2A:file(relativePath: {eq: \"gradingShowcase/real2_a.jpg\"}) {\n            ...fileImage\n        }\n\n        real2B:file(relativePath: {eq: \"gradingShowcase/real2_b.jpg\"}) {\n            ...fileImage\n        }\n\n        poucet2A:file(relativePath: {eq: \"gradingShowcase/poucet2_a.jpg\"}) {\n            ...fileImage\n        }\n\n        poucet2B:file(relativePath: {eq: \"gradingShowcase/poucet2_b.jpg\"}) {\n            ...fileImage\n        }\n\n        mari3A:file(relativePath: {eq: \"gradingShowcase/mari3_a.jpg\"}) {\n            ...fileImage\n        }\n        mari3B:file(relativePath: {eq: \"gradingShowcase/mari3_b.jpg\"}) {\n            ...fileImage\n        }\n        mari1A:file(relativePath: {eq: \"gradingShowcase/mari1_a.jpg\"}) {\n            ...fileImage\n        }\n        mari1B:file(relativePath: {eq: \"gradingShowcase/mari1_b.jpg\"}) {\n            ...fileImage\n        }\n        mari5A:file(relativePath: {eq: \"gradingShowcase/mari5_a.jpg\"}) {\n            ...fileImage\n        }\n        mari5B:file(relativePath: {eq: \"gradingShowcase/mari5_b.jpg\"}) {\n            ...fileImage\n        }\n\n        harm1A:file(relativePath: {eq: \"gradingShowcase/harm1_a.jpg\"}) {\n            ...fileImage\n        }\n        harm1B:file(relativePath: {eq: \"gradingShowcase/harm1_b.jpg\"}) {\n            ...fileImage\n        }\n        harm3A:file(relativePath: {eq: \"gradingShowcase/harm3_a.jpg\"}) {\n            ...fileImage\n        }\n        harm3B:file(relativePath: {eq: \"gradingShowcase/harm3_b.jpg\"}) {\n            ...fileImage\n        }\n        harm4A:file(relativePath: {eq: \"gradingShowcase/harm4_a.jpg\"}) {\n            ...fileImage\n        }\n        harm4B:file(relativePath: {eq: \"gradingShowcase/harm4_b.jpg\"}) {\n            ...fileImage\n        }\n        harm5A:file(relativePath: {eq: \"gradingShowcase/harm5_a.jpg\"}) {\n            ...fileImage\n        }\n        harm5B:file(relativePath: {eq: \"gradingShowcase/harm5_b.jpg\"}) {\n            ...fileImage\n        }\n\n    }`\n\n\n\n\n\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n\n/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(typeof window !== 'undefined' ? window : this, function () {\n\n    // Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n            return window.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n    * Get element size\n    * @param {HTMLElement} element\n    * @returns {Object} {width, height}\n    */\n    function getElementSize(element) {\n        if (!element.getBoundingClientRect) {\n            return {\n                width: element.offsetWidth,\n                height: element.offsetHeight\n            }\n        }\n\n        var rect = element.getBoundingClientRect();\n        return {\n            width: Math.round(rect.width),\n            height: Math.round(rect.height)\n        }\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call();\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            };\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element) return;\n            if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizedAttached = new EventQueue();\n            element.resizedAttached.add(resized);\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.dir = 'ltr';\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: -10px; top: -10px; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            var position = window.getComputedStyle(element).getPropertyValue('position');\n            if ('absolute' !== position && 'relative' !== position && 'fixed' !== position) {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var dirty, rafId, newWidth, newHeight;\n            var size = getElementSize(element);\n            var lastWidth = size.width;\n            var lastHeight = size.height;\n\n            var reset = function() {\n                //set display to block, necessary otherwise hidden elements won't ever work\n                var invisible = element.offsetWidth === 0 && element.offsetHeight === 0;\n\n                if (invisible) {\n                    var saveDisplay = element.style.display;\n                    element.style.display = 'block';\n                }\n\n                expandChild.style.width = '100000px';\n                expandChild.style.height = '100000px';\n\n                expand.scrollLeft = 100000;\n                expand.scrollTop = 100000;\n\n                shrink.scrollLeft = 100000;\n                shrink.scrollTop = 100000;\n\n                if (invisible) {\n                    element.style.display = saveDisplay;\n                }\n            };\n            element.resizeSensor.resetSensor = reset;\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = newWidth;\n                lastHeight = newHeight;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var onScroll = function() {\n                var size = getElementSize(element);\n                var newWidth = size.width;\n                var newHeight = size.height;\n                dirty = newWidth != lastWidth || newHeight != lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n            \n\t\t\t// Fix for custom Elements\n\t\t\trequestAnimationFrame(reset);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n\n        this.reset = function() {\n            element.resizeSensor.resetSensor();\n        };\n    };\n\n    ResizeSensor.reset = function(element, ev) {\n        forEachElement(element, function(elem){\n            elem.resizeSensor.resetSensor();\n        });\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if (!elem) return;\n            if(elem.resizedAttached && typeof ev === \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    return ResizeSensor;\n\n}));\n","module.exports = {\n    ResizeSensor: require('./src/ResizeSensor'),\n    ElementQueries: require('./src/ElementQueries')\n};\n","'use strict';\n\n/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['./ResizeSensor.js'], factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory(require('./ResizeSensor.js'));\n    } else {\n        root.ElementQueries = factory(root.ResizeSensor);\n        root.ElementQueries.listen();\n    }\n}(typeof window !== 'undefined' ? window : this, function (ResizeSensor) {\n\n    /**\n     *\n     * @type {Function}\n     * @constructor\n     */\n    var ElementQueries = function () {\n        //<style> element with our dynamically created styles\n        var cssStyleElement;\n\n        //all rules found for element queries\n        var allQueries = {};\n\n        //association map to identify which selector belongs to a element from the animationstart event.\n        var idToSelectorMapping = [];\n\n        /**\n         *\n         * @param element\n         * @returns {Number}\n         */\n        function getEmSize(element) {\n            if (!element) {\n                element = document.documentElement;\n            }\n            var fontSize = window.getComputedStyle(element, null).fontSize;\n            return parseFloat(fontSize) || 16;\n        }\n\n        /**\n         * Get element size\n         * @param {HTMLElement} element\n         * @returns {Object} {width, height}\n         */\n        function getElementSize(element) {\n            if (!element.getBoundingClientRect) {\n                return {\n                    width: element.offsetWidth,\n                    height: element.offsetHeight\n                }\n            }\n\n            var rect = element.getBoundingClientRect();\n            return {\n                width: Math.round(rect.width),\n                height: Math.round(rect.height)\n            }\n        }\n\n        /**\n         *\n         * @copyright https://github.com/Mr0grog/element-query/blob/master/LICENSE\n         *\n         * @param {HTMLElement} element\n         * @param {*} value\n         * @returns {*}\n         */\n        function convertToPx(element, value) {\n            var numbers = value.split(/\\d/);\n            var units = numbers[numbers.length - 1];\n            value = parseFloat(value);\n            switch (units) {\n                case \"px\":\n                    return value;\n                case \"em\":\n                    return value * getEmSize(element);\n                case \"rem\":\n                    return value * getEmSize();\n                // Viewport units!\n                // According to http://quirksmode.org/mobile/tableViewport.html\n                // documentElement.clientWidth/Height gets us the most reliable info\n                case \"vw\":\n                    return value * document.documentElement.clientWidth / 100;\n                case \"vh\":\n                    return value * document.documentElement.clientHeight / 100;\n                case \"vmin\":\n                case \"vmax\":\n                    var vw = document.documentElement.clientWidth / 100;\n                    var vh = document.documentElement.clientHeight / 100;\n                    var chooser = Math[units === \"vmin\" ? \"min\" : \"max\"];\n                    return value * chooser(vw, vh);\n                default:\n                    return value;\n                // for now, not supporting physical units (since they are just a set number of px)\n                // or ex/ch (getting accurate measurements is hard)\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {String} id\n         * @constructor\n         */\n        function SetupInformation(element, id) {\n            this.element = element;\n            var key, option, elementSize, value, actualValue, attrValues, attrValue, attrName;\n\n            var attributes = ['min-width', 'min-height', 'max-width', 'max-height'];\n\n            /**\n             * Extracts the computed width/height and sets to min/max- attribute.\n             */\n            this.call = function () {\n                // extract current dimensions\n                elementSize = getElementSize(this.element);\n\n                attrValues = {};\n\n                for (key in allQueries[id]) {\n                    if (!allQueries[id].hasOwnProperty(key)) {\n                        continue;\n                    }\n                    option = allQueries[id][key];\n\n                    value = convertToPx(this.element, option.value);\n\n                    actualValue = option.property === 'width' ? elementSize.width : elementSize.height;\n                    attrName = option.mode + '-' + option.property;\n                    attrValue = '';\n\n                    if (option.mode === 'min' && actualValue >= value) {\n                        attrValue += option.value;\n                    }\n\n                    if (option.mode === 'max' && actualValue <= value) {\n                        attrValue += option.value;\n                    }\n\n                    if (!attrValues[attrName]) attrValues[attrName] = '';\n                    if (attrValue && -1 === (' ' + attrValues[attrName] + ' ').indexOf(' ' + attrValue + ' ')) {\n                        attrValues[attrName] += ' ' + attrValue;\n                    }\n                }\n\n                for (var k in attributes) {\n                    if (!attributes.hasOwnProperty(k)) continue;\n\n                    if (attrValues[attributes[k]]) {\n                        this.element.setAttribute(attributes[k], attrValues[attributes[k]].substr(1));\n                    } else {\n                        this.element.removeAttribute(attributes[k]);\n                    }\n                }\n            };\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {Object}      id\n         */\n        function setupElement(element, id) {\n            if (!element.elementQueriesSetupInformation) {\n                element.elementQueriesSetupInformation = new SetupInformation(element, id);\n            }\n            if (!element.elementQueriesSensor) {\n                element.elementQueriesSensor = new ResizeSensor(element, function () {\n                    element.elementQueriesSetupInformation.call();\n                });\n            }\n\n            element.elementQueriesSetupInformation.call();\n        }\n\n        /**\n         * Stores rules to the selector that should be applied once resized.\n         *\n         * @param {String} selector\n         * @param {String} mode min|max\n         * @param {String} property width|height\n         * @param {String} value\n         */\n        function queueQuery(selector, mode, property, value) {\n            if (typeof(allQueries[selector]) === 'undefined') {\n                allQueries[selector] = [];\n                // add animation to trigger animationstart event, so we know exactly when a element appears in the DOM\n\n                var id = idToSelectorMapping.length;\n                cssStyleElement.innerHTML += '\\n' + selector + ' {animation: 0.1s element-queries;}';\n                cssStyleElement.innerHTML += '\\n' + selector + ' > .resize-sensor {min-width: '+id+'px;}';\n                idToSelectorMapping.push(selector);\n            }\n\n            allQueries[selector].push({\n                mode: mode,\n                property: property,\n                value: value\n            });\n        }\n\n        function getQuery(container) {\n            var query;\n            if (document.querySelectorAll) query = (container) ? container.querySelectorAll.bind(container) : document.querySelectorAll.bind(document);\n            if (!query && 'undefined' !== typeof $$) query = $$;\n            if (!query && 'undefined' !== typeof jQuery) query = jQuery;\n\n            if (!query) {\n                throw 'No document.querySelectorAll, jQuery or Mootools\\'s $$ found.';\n            }\n\n            return query;\n        }\n\n        /**\n         * If animationStart didn't catch a new element in the DOM, we can manually search for it\n         */\n        function findElementQueriesElements(container) {\n            var query = getQuery(container);\n\n            for (var selector in allQueries) if (allQueries.hasOwnProperty(selector)) {\n                // find all elements based on the extract query selector from the element query rule\n                var elements = query(selector, container);\n\n                for (var i = 0, j = elements.length; i < j; i++) {\n                    setupElement(elements[i], selector);\n                }\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         */\n        function attachResponsiveImage(element) {\n            var children = [];\n            var rules = [];\n            var sources = [];\n            var defaultImageId = 0;\n            var lastActiveImage = -1;\n            var loadedImages = [];\n\n            for (var i in element.children) {\n                if (!element.children.hasOwnProperty(i)) continue;\n\n                if (element.children[i].tagName && element.children[i].tagName.toLowerCase() === 'img') {\n                    children.push(element.children[i]);\n\n                    var minWidth = element.children[i].getAttribute('min-width') || element.children[i].getAttribute('data-min-width');\n                    //var minHeight = element.children[i].getAttribute('min-height') || element.children[i].getAttribute('data-min-height');\n                    var src = element.children[i].getAttribute('data-src') || element.children[i].getAttribute('url');\n\n                    sources.push(src);\n\n                    var rule = {\n                        minWidth: minWidth\n                    };\n\n                    rules.push(rule);\n\n                    if (!minWidth) {\n                        defaultImageId = children.length - 1;\n                        element.children[i].style.display = 'block';\n                    } else {\n                        element.children[i].style.display = 'none';\n                    }\n                }\n            }\n\n            lastActiveImage = defaultImageId;\n\n            function check() {\n                var imageToDisplay = false, i;\n\n                for (i in children) {\n                    if (!children.hasOwnProperty(i)) continue;\n\n                    if (rules[i].minWidth) {\n                        if (element.offsetWidth > rules[i].minWidth) {\n                            imageToDisplay = i;\n                        }\n                    }\n                }\n\n                if (!imageToDisplay) {\n                    //no rule matched, show default\n                    imageToDisplay = defaultImageId;\n                }\n\n                if (lastActiveImage !== imageToDisplay) {\n                    //image change\n\n                    if (!loadedImages[imageToDisplay]) {\n                        //image has not been loaded yet, we need to load the image first in memory to prevent flash of\n                        //no content\n\n                        var image = new Image();\n                        image.onload = function () {\n                            children[imageToDisplay].src = sources[imageToDisplay];\n\n                            children[lastActiveImage].style.display = 'none';\n                            children[imageToDisplay].style.display = 'block';\n\n                            loadedImages[imageToDisplay] = true;\n\n                            lastActiveImage = imageToDisplay;\n                        };\n\n                        image.src = sources[imageToDisplay];\n                    } else {\n                        children[lastActiveImage].style.display = 'none';\n                        children[imageToDisplay].style.display = 'block';\n                        lastActiveImage = imageToDisplay;\n                    }\n                } else {\n                    //make sure for initial check call the .src is set correctly\n                    children[imageToDisplay].src = sources[imageToDisplay];\n                }\n            }\n\n            element.resizeSensor = new ResizeSensor(element, check);\n            check();\n        }\n\n        function findResponsiveImages() {\n            var query = getQuery();\n\n            var elements = query('[data-responsive-image],[responsive-image]');\n            for (var i = 0, j = elements.length; i < j; i++) {\n                attachResponsiveImage(elements[i]);\n            }\n        }\n\n        var regex = /,?[\\s\\t]*([^,\\n]*?)((?:\\[[\\s\\t]*?(?:min|max)-(?:width|height)[\\s\\t]*?[~$\\^]?=[\\s\\t]*?\"[^\"]*?\"[\\s\\t]*?])+)([^,\\n\\s\\{]*)/mgi;\n        var attrRegex = /\\[[\\s\\t]*?(min|max)-(width|height)[\\s\\t]*?[~$\\^]?=[\\s\\t]*?\"([^\"]*?)\"[\\s\\t]*?]/mgi;\n\n        /**\n         * @param {String} css\n         */\n        function extractQuery(css) {\n            var match, smatch, attrs, attrMatch;\n\n            css = css.replace(/'/g, '\"');\n            while (null !== (match = regex.exec(css))) {\n                smatch = match[1] + match[3];\n                attrs = match[2];\n\n                while (null !== (attrMatch = attrRegex.exec(attrs))) {\n                    queueQuery(smatch, attrMatch[1], attrMatch[2], attrMatch[3]);\n                }\n            }\n        }\n\n        /**\n         * @param {CssRule[]|String} rules\n         */\n        function readRules(rules) {\n            var selector = '';\n\n            if (!rules) {\n                return;\n            }\n\n            if ('string' === typeof rules) {\n                rules = rules.toLowerCase();\n                if (-1 !== rules.indexOf('min-width') || -1 !== rules.indexOf('max-width')) {\n                    extractQuery(rules);\n                }\n            } else {\n                for (var i = 0, j = rules.length; i < j; i++) {\n                    if (1 === rules[i].type) {\n                        selector = rules[i].selectorText || rules[i].cssText;\n                        if (-1 !== selector.indexOf('min-height') || -1 !== selector.indexOf('max-height')) {\n                            extractQuery(selector);\n                        } else if (-1 !== selector.indexOf('min-width') || -1 !== selector.indexOf('max-width')) {\n                            extractQuery(selector);\n                        }\n                    } else if (4 === rules[i].type) {\n                        readRules(rules[i].cssRules || rules[i].rules);\n                    } else if (3 === rules[i].type) {\n                        if(rules[i].styleSheet.hasOwnProperty(\"cssRules\")) {\n                            readRules(rules[i].styleSheet.cssRules);\n                        }\n                    }\n                }\n            }\n        }\n\n        var defaultCssInjected = false;\n\n        /**\n         * Searches all css rules and setups the event listener to all elements with element query rules..\n         */\n        this.init = function () {\n            var animationStart = 'animationstart';\n            if (typeof document.documentElement.style['webkitAnimationName'] !== 'undefined') {\n                animationStart = 'webkitAnimationStart';\n            } else if (typeof document.documentElement.style['MozAnimationName'] !== 'undefined') {\n                animationStart = 'mozanimationstart';\n            } else if (typeof document.documentElement.style['OAnimationName'] !== 'undefined') {\n                animationStart = 'oanimationstart';\n            }\n\n            document.body.addEventListener(animationStart, function (e) {\n                var element = e.target;\n                var styles = window.getComputedStyle(element, null);\n\n                if (-1 !== styles.getPropertyValue('animation-name').indexOf('element-queries')) {\n                    element.elementQueriesSensor = new ResizeSensor(element, function () {\n                        if (element.elementQueriesSetupInformation) {\n                            element.elementQueriesSetupInformation.call();\n                        }\n                    });\n\n                    var sensorStyles = window.getComputedStyle(element.resizeSensor, null);\n                    var id = sensorStyles.getPropertyValue('min-width');\n                    id = parseInt(id.replace('px', ''));\n                    setupElement(e.target, idToSelectorMapping[id]);\n                }\n            });\n\n            if (!defaultCssInjected) {\n                cssStyleElement = document.createElement('style');\n                cssStyleElement.type = 'text/css';\n                cssStyleElement.innerHTML = '[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}';\n\n                //safari wants at least one rule in keyframes to start working\n                cssStyleElement.innerHTML += '\\n@keyframes element-queries { 0% { visibility: inherit; } }';\n                document.getElementsByTagName('head')[0].appendChild(cssStyleElement);\n                defaultCssInjected = true;\n            }\n\n            for (var i = 0, j = document.styleSheets.length; i < j; i++) {\n                try {\n                    if (document.styleSheets[i].href && 0 === document.styleSheets[i].href.indexOf('file://')) {\n                        console.log(\"CssElementQueries: unable to parse local css files, \" + document.styleSheets[i].href);\n                    }\n\n                    readRules(document.styleSheets[i].cssRules || document.styleSheets[i].rules || document.styleSheets[i].cssText);\n                } catch (e) {\n                }\n            }\n\n            findResponsiveImages();\n        };\n\n        /**\n         * Go through all collected rules (readRules()) and attach the resize-listener.\n         * Not necessary to call it manually, since we detect automatically when new elements\n         * are available in the DOM. However, sometimes handy for dirty DOM modifications.\n         *\n         * @param {HTMLElement} container only elements of the container are considered (document.body if not set)\n         */\n        this.findElementQueriesElements = function (container) {\n            findElementQueriesElements(container);\n        };\n\n        this.update = function () {\n            this.init();\n        };\n    };\n\n    ElementQueries.update = function () {\n        ElementQueries.instance.update();\n    };\n\n    /**\n     * Removes all sensor and elementquery information from the element.\n     *\n     * @param {HTMLElement} element\n     */\n    ElementQueries.detach = function (element) {\n        if (element.elementQueriesSetupInformation) {\n            //element queries\n            element.elementQueriesSensor.detach();\n            delete element.elementQueriesSetupInformation;\n            delete element.elementQueriesSensor;\n\n        } else if (element.resizeSensor) {\n            //responsive image\n\n            element.resizeSensor.detach();\n            delete element.resizeSensor;\n        }\n    };\n\n    ElementQueries.init = function () {\n        if (!ElementQueries.instance) {\n            ElementQueries.instance = new ElementQueries();\n        }\n\n        ElementQueries.instance.init();\n    };\n\n    var domLoaded = function (callback) {\n        /* Mozilla, Chrome, Opera */\n        if (document.addEventListener) {\n            document.addEventListener('DOMContentLoaded', callback, false);\n        }\n        /* Safari, iCab, Konqueror */\n        else if (/KHTML|WebKit|iCab/i.test(navigator.userAgent)) {\n            var DOMLoadTimer = setInterval(function () {\n                if (/loaded|complete/i.test(document.readyState)) {\n                    callback();\n                    clearInterval(DOMLoadTimer);\n                }\n            }, 10);\n        }\n        /* Other web browsers */\n        else window.onload = callback;\n    };\n\n    ElementQueries.findElementQueriesElements = function (container) {\n        ElementQueries.instance.findElementQueriesElements(container);\n    };\n\n    ElementQueries.listen = function () {\n        domLoaded(ElementQueries.init);\n    };\n\n    return ElementQueries;\n\n}));\n"],"sourceRoot":""}