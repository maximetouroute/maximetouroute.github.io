{"version":3,"sources":["webpack:///./src/layout/BasicPage.js"],"names":["renderAst","rehypeReact","createElement","React","components","PhotoGrid","ImageCompare","Compiler","Template","post","data","markdownRemark","title","frontmatter","description","subtitle","pathname","path","article","className","id","style","paddingTop","paddingBottom","itemProp","htmlAst","pageQuery"],"mappings":"2FAAA,mMASMA,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAY,CAAE,aAAcC,IAAW,gBAAiBC,OACvDC,SAEY,SAASC,EAAT,GAA6B,IAClBC,EADiB,EAARC,KACzBC,eACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOH,EAAKI,YAAYD,MACxBE,YACEL,EAAKI,YAAYC,aAAeL,EAAKI,YAAYE,UAAY,GAE/DC,SAAUP,EAAKI,YAAYI,KAC3BC,SAAO,IAGT,yBAAKC,UAAU,QACb,6BAASA,UAAU,eAAeC,GAAG,WACnC,4BACED,UAAU,SACVE,MAAO,CAAEC,WAAY,MAAOC,cAAe,SAE7C,yBAAKJ,UAAU,UAAUK,SAAS,eAC/BxB,EAAUS,EAAKgB,aAQrB,IAAMC,EAAS","file":"component---src-layout-basic-page-js-11d03938a8cfa9af7c2f.js","sourcesContent":["import React from 'react'\nimport MainLayout from './MainLayout'\nimport './Layouts.scss'\nimport rehypeReact from 'rehype-react'\nimport PhotoGrid from '../bits/PhotoGrid/PhotoGrid'\nimport ImageCompare from '../bits/ImageCompare/GatsbyImageCompare'\nimport MetaTags from '../bits/MetaTags/MetaTags'\nimport { graphql } from 'gatsby'\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { 'photo-grid': PhotoGrid, 'image-compare': ImageCompare },\n}).Compiler\n\nexport default function Template({ data }) {\n  const { markdownRemark: post } = data\n  return (\n    <MainLayout>\n      <MetaTags\n        title={post.frontmatter.title}\n        description={\n          post.frontmatter.description || post.frontmatter.subtitle || ''\n        }\n        pathname={post.frontmatter.path}\n        article\n      />\n\n      <div className=\"Page\">\n        <article className=\"card article\" id=\"content\">\n          <header\n            className=\"header\"\n            style={{ paddingTop: '1em', paddingBottom: '2em' }}\n          ></header>\n          <div className=\"content\" itemProp=\"articleBody\">\n            {renderAst(post.htmlAst)}\n          </div>\n        </article>\n      </div>\n    </MainLayout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query PageByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst # previously \\`html\\`\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}