{"version":3,"file":"component---src-layout-mdx-article-tsx-9001b8a42c4c000e81cf.js","mappings":"y3BAae,SAASA,EAAT,GAA6D,IAAjCC,EAAgC,EAAxCC,KAAQD,IAAOE,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAClDC,EAAqCD,EAArCC,aAAcC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAE1BC,EAAmBH,GACvB,QAAC,EAAAI,KAAD,CAAMC,GAAOL,EAAaM,YAAYC,KAA9B,YAAR,KACKP,EAAaM,YAAYE,QAG9B,oBAEIC,EAAeR,EACnBA,IACE,QAAC,EAAAG,KAAD,CAAMC,GAAOJ,EAASK,YAAYC,KAA1B,YACLN,EAASK,YAAYE,MADxB,OAKF,oBAGF,OACE,QAAC,IAAD,CACEE,SAAUd,EAAIU,YAAYI,SAC1BZ,SAAQ,KAAOA,GACfa,YAAaf,EAAIU,YAAYM,MAAMC,OAAOC,UAE1C,QAAC,IAAD,CACEN,MAAOZ,EAAIU,YAAYE,MACvBO,YAAanB,EAAIU,YAAYS,aAAenB,EAAIU,YAAYU,SAC5DJ,MAAOhB,EAAIU,YAAYM,MAAMK,gBAAgBC,MAAMC,IACnDC,SAAUxB,EAAIU,YAAYC,KAC1Bc,SAAS,EACTnB,SAAUA,KAEZ,eACEoB,IAAK,SAACC,GAAD,OAAWC,EAAAA,EAAAA,IAAaD,IAC7BE,GAAG,YAEH,eAAKH,IAAKI,EAAAA,KACR,cAAIJ,IAAKK,EAAAA,IAAe/B,EAAIU,YAAYE,QACxC,cAAIc,IAAKM,EAAAA,KACP,kBACE,sBAAShC,EAAIU,YAAYU,SAAzB,MACA,mBAAO,QAIb,eAAKM,IAAKO,EAAAA,IACP1B,EACAM,KAIL,eAAKa,IAAK,SAACC,GAAD,OAAWO,EAAAA,EAAAA,IAAQP,MAC3B,mBACED,IAAKS,EAAAA,GACLC,WAAS,EACTC,SAAS,kCAGT,eAAKX,IAAKY,EAAAA,KACR,oBACA,oBAQA,QAAC,EAAAC,YAAD,CAAaC,WAAYC,EAAAA,KACvB,QAAC,EAAAC,YAAD,CACEC,aAAc3C,EAAIU,YAAYkC,qBAC9BC,YAAa7C,EAAIU,YAAYoC,qBAE5B9C,EAAI+C,QAGT,eAAKrB,IAAK,SAACC,GAAD,OAAWqB,EAAAA,EAAAA,IAAgBrB,KAClCpB,EACAM","sources":["webpack://maxime-touroute-portfolio/./src/layout/MdxArticle.tsx"],"sourcesContent":["import React from 'react'\nimport MainLayout from './MainLayout'\nimport 'moment'\nimport { MDXProvider } from '@mdx-js/react'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport SEO from '../bits/SEO/SEO'\nimport { graphql, Link } from 'gatsby'\nimport { SHORTCODES } from './MdxBits'\nimport { coverBandCSS, coverBandOverlayCSS, punchlineCSS, subtextCSS, pageCSS, cardCSS,  } from './basicPageStyles'\nimport { nextPrevLinkInsideCoverCSS, nextPrevLinkCSS, articleCSS, colorCSS } from './MdxArticleStyles';\n\n\n\nexport default function Template({ data: { mdx }, location, pageContext }) {\n  const { previousPost, nextPost, langCode } = pageContext\n  // content is at false is no previous or next\n  const previousPostHtml = previousPost ? (\n    <Link to={`${previousPost.frontmatter.path}#content`}>\n      ← {previousPost.frontmatter.title}\n    </Link>\n  ) : (\n    <div></div>\n  )\n  const nextPostHtml = nextPost ? (\n    nextPost && (\n      <Link to={`${nextPost.frontmatter.path}#content`}>\n        {nextPost.frontmatter.title} →\n      </Link>\n    )\n  ) : (\n    <div></div>\n  )\n\n  return (\n    <MainLayout\n      language={mdx.frontmatter.language}\n      location={{ ...location }}\n      accentColor={mdx.frontmatter.image.colors.vibrant}\n    >\n      <SEO\n        title={mdx.frontmatter.title}\n        description={mdx.frontmatter.description || mdx.frontmatter.subtitle}\n        image={mdx.frontmatter.image.childImageSharp.fixed.src}\n        pathname={mdx.frontmatter.path}\n        article={true}\n        langCode={langCode}\n      />\n      <div\n        css={(theme) => coverBandCSS(theme)}\n        id=\"content\"\n      >\n        <div css={coverBandOverlayCSS}>\n          <h1 css={punchlineCSS}>{mdx.frontmatter.title}</h1>\n          <h2 css={subtextCSS}>\n            <p>\n              <strong>{mdx.frontmatter.subtitle} </strong>\n              <br />{' '}\n            </p>\n          </h2>\n        </div>\n        <div css={nextPrevLinkInsideCoverCSS}>\n          {previousPostHtml}\n          {nextPostHtml}\n        </div>\n      </div>\n\n      <div css={(theme) => pageCSS(theme)}>\n        <article\n          css={cardCSS}\n          itemScope\n          itemType=\"http://schema.org/BlogPosting\"\n        >\n          {/* css={theme => ({backgroundColor: theme.colors.accent})} */}\n          <div css={articleCSS}>\n            <br />\n            <br />\n             {/* <div css={colorCSS(mdx.frontmatter.image.colors.vibrant)}></div>\n            <div css={colorCSS(mdx.frontmatter.image.colors.darkVibrant)}></div>\n            <div css={colorCSS(mdx.frontmatter.image.colors.lightVibrant)}></div>\n            <div css={colorCSS(mdx.frontmatter.image.colors.muted)}></div>\n            <div css={colorCSS(mdx.frontmatter.image.colors.darkMuted)}></div>\n            <div css={colorCSS(mdx.frontmatter.image.colors.lightMuted)}></div> */}\n            {/* {JSON.stringify(mdx.frontmatter.image.colors)}*/}\n            <MDXProvider components={SHORTCODES}>\n              <MDXRenderer\n                remoteImages={mdx.frontmatter.embeddedImagesRemote}\n                localImages={mdx.frontmatter.embeddedImagesLocal}\n              >\n                {mdx.body}\n              </MDXRenderer>\n            </MDXProvider>\n            <div css={(theme) => nextPrevLinkCSS(theme)}>\n              {previousPostHtml}\n              {nextPostHtml}\n            </div>\n          </div>\n        </article>\n      </div>\n    </MainLayout>\n  )\n}\n\nexport const articlePageQuery = graphql`\n  query MdxArticleByPath($path: String!) {\n    mdx(frontmatter: { path: { eq: $path } }) {\n      body\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        subtitle\n        language\n        description\n        embeddedImagesRemote {\n          ...modernGatImage\n        }\n        embeddedImagesLocal {\n          ...modernGatImage\n        }\n        image {\n          colors {\n            ...GatsbyImageColors\n          }\n          childImageSharp {\n            # Other options include height (set both width and height to crop),\n            # grayscale, duotone, rotate, etc.\n            fixed(width: 700) {\n              # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\n              ...GatsbyImageSharpFixed\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Template","mdx","data","location","pageContext","previousPost","nextPost","langCode","previousPostHtml","Link","to","frontmatter","path","title","nextPostHtml","language","accentColor","image","colors","vibrant","description","subtitle","childImageSharp","fixed","src","pathname","article","css","theme","coverBandCSS","id","coverBandOverlayCSS","punchlineCSS","subtextCSS","nextPrevLinkInsideCoverCSS","pageCSS","cardCSS","itemScope","itemType","articleCSS","MDXProvider","components","SHORTCODES","MDXRenderer","remoteImages","embeddedImagesRemote","localImages","embeddedImagesLocal","body","nextPrevLinkCSS"],"sourceRoot":""}